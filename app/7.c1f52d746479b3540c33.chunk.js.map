{"version":3,"sources":["webpack:///./src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue?3d07","webpack:///./src/main/webapp/app/account/reset-password/finish/reset-password-finish.component.ts","webpack:///./src/main/webapp/app/account/reset-password/finish/reset-password-finish.component.ts?7e79","webpack:///./src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","domProps","textContent","_s","$t","_v","keyMissing","innerHTML","_e","error","success","on","click","openLogin","doNotMatch","attrs","name","role","submit","$event","preventDefault","finishReset","for","directives","rawName","value","$v","resetAccount","newPassword","$model","expression","class","valid","$invalid","invalid","type","id","placeholder","minlength","maxlength","required","input","target","composing","$set","$anyDirty","minLength","maxLength","confirmPassword","disabled","_withStripped","r","t","n","a","i","c","validations","validators","Object","finish_reset_password_finish_componentvue_type_script_lang_ts_","_super","ResetPasswordFinish","_this","apply","arguments","s","tslib_es6","prototype","created","$route","query","key","axios_default","post","then","catch","loginService","$root","b","vue_property_decorator","d","Function","m","component","componentNormalizer","options","__file","__webpack_exports__","default"],"mappings":"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","file":"app/7.c1f52d746479b3540c33.chunk.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8\" }, [\n        _c(\n          \"h1\",\n          { domProps: { textContent: _vm._s(_vm.$t(\"reset.request.title\")) } },\n          [_vm._v(\"Reset your password\")]\n        ),\n        _vm._v(\" \"),\n        _vm.keyMissing\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"reset.finish.messages.keymissing\"))\n                }\n              },\n              [_c(\"strong\", [_vm._v(\"The password reset key is missing.\")])]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.error\n          ? _c(\"div\", { staticClass: \"alert alert-danger\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.finish.messages.error\"))\n                  }\n                },\n                [\n                  _vm._v(\n                    \"Your password couldn't be reset. Remember a password request is only valid for 24 hours.\"\n                  )\n                ]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\"div\", { staticClass: \"alert alert-success\" }, [\n              _c(\n                \"span\",\n                {\n                  domProps: {\n                    innerHTML: _vm._s(_vm.$t(\"reset.finish.messages.success\"))\n                  }\n                },\n                [\n                  _c(\"strong\", [_vm._v(\"Your password had been reset.\")]),\n                  _vm._v(\" Please \")\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"a\",\n                {\n                  staticClass: \"alert-link\",\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.messages.info.authenticated.link\")\n                    )\n                  },\n                  on: { click: _vm.openLogin }\n                },\n                [_vm._v(\"sign in\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.doNotMatch\n          ? _c(\"div\", { staticClass: \"alert alert-danger\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.messages.error.dontmatch\")\n                    )\n                  }\n                },\n                [_vm._v(\"The password and its confirmation do not match!\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.success && !_vm.keyMissing\n          ? _c(\"div\", { staticClass: \"alert alert-warning\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.finish.messages.info\"))\n                  }\n                },\n                [_vm._v(\"Choose a new password.\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.keyMissing\n          ? _c(\"div\", [\n              !_vm.success\n                ? _c(\n                    \"form\",\n                    {\n                      attrs: { name: \"form\", role: \"form\" },\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.finishReset()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-control-label\",\n                            attrs: { for: \"newPassword\" },\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.form.newpassword\")\n                              )\n                            }\n                          },\n                          [_vm._v(\"New password\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.$v.resetAccount.newPassword.$model,\n                              expression: \"$v.resetAccount.newPassword.$model\"\n                            }\n                          ],\n                          staticClass: \"form-control\",\n                          class: {\n                            valid: !_vm.$v.resetAccount.newPassword.$invalid,\n                            invalid: _vm.$v.resetAccount.newPassword.$invalid\n                          },\n                          attrs: {\n                            type: \"password\",\n                            id: \"newPassword\",\n                            name: \"newPassword\",\n                            placeholder: _vm.$t(\n                              \"global.form['newpassword.placeholder']\"\n                            ),\n                            minlength: \"4\",\n                            maxlength: \"50\",\n                            required: \"\"\n                          },\n                          domProps: {\n                            value: _vm.$v.resetAccount.newPassword.$model\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.$v.resetAccount.newPassword,\n                                \"$model\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.$v.resetAccount.newPassword.$anyDirty &&\n                        _vm.$v.resetAccount.newPassword.$invalid\n                          ? _c(\"div\", [\n                              !_vm.$v.resetAccount.newPassword.required\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.required\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                Your password is required.\\n                            \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.newPassword.minLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.minlength\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                Your password is required to be at least 4 characters.\\n                            \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.newPassword.maxLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.maxlength\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                Your password cannot be longer than 50 characters.\\n                            \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ])\n                          : _vm._e()\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-control-label\",\n                            attrs: { for: \"confirmPassword\" },\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.form.confirmpassword\")\n                              )\n                            }\n                          },\n                          [_vm._v(\"New password confirmation\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.$v.resetAccount.confirmPassword.$model,\n                              expression:\n                                \"$v.resetAccount.confirmPassword.$model\"\n                            }\n                          ],\n                          staticClass: \"form-control\",\n                          class: {\n                            valid: !_vm.$v.resetAccount.confirmPassword\n                              .$invalid,\n                            invalid:\n                              _vm.$v.resetAccount.confirmPassword.$invalid\n                          },\n                          attrs: {\n                            type: \"password\",\n                            id: \"confirmPassword\",\n                            name: \"confirmPassword\",\n                            placeholder: _vm.$t(\n                              \"global.form['confirmpassword.placeholder']\"\n                            ),\n                            minlength: \"4\",\n                            maxlength: \"50\",\n                            required: \"\"\n                          },\n                          domProps: {\n                            value: _vm.$v.resetAccount.confirmPassword.$model\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.$v.resetAccount.confirmPassword,\n                                \"$model\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.$v.resetAccount.confirmPassword.$anyDirty &&\n                        _vm.$v.resetAccount.confirmPassword.$invalid\n                          ? _c(\"div\", [\n                              !_vm.$v.resetAccount.confirmPassword.required\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.confirmpassword.required\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                Your confirmation password is required.\\n                            \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.confirmPassword.minLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.confirmpassword.minlength\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                Your confirmation password is required to be at least 4 characters.\\n                            \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.confirmPassword.maxLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.confirmpassword.maxlength\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                Your confirmation password cannot be longer than 50 characters.\\n                            \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ])\n                          : _vm._e()\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-primary\",\n                          attrs: {\n                            type: \"submit\",\n                            disabled: _vm.$v.resetAccount.$invalid\n                          },\n                          domProps: {\n                            textContent: _vm._s(_vm.$t(\"password.form.button\"))\n                          }\n                        },\n                        [_vm._v(\"Save\")]\n                      )\n                    ]\n                  )\n                : _vm._e()\n            ])\n          : _vm._e()\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { maxLength, minLength, required } from 'vuelidate/lib/validators';\nimport { Inject, Vue, Component } from 'vue-property-decorator';\nimport LoginService from '@/account/login.service';\n\nconst validations = {\n  resetAccount: {\n    newPassword: {\n      required,\n      minLength: minLength(4),\n      maxLength: maxLength(254)\n    },\n    confirmPassword: {\n      required,\n      minLength: minLength(4),\n      maxLength: maxLength(254)\n    }\n  }\n};\n\n@Component({\n  validations\n})\nexport default class ResetPasswordFinish extends Vue {\n  @Inject('loginService')\n  private loginService: () => LoginService;\n\n  public doNotMatch: string = null;\n  public success: string = null;\n  public error: string = null;\n  public keyMissing: boolean = null;\n  public key: any;\n  public resetAccount: any = {\n    newPassword: null,\n    confirmPassword: null\n  };\n\n  created(): void {\n    if (this.$route !== undefined && this.$route.query !== undefined && this.$route.query.key !== undefined) {\n      this.key = this.$route.query.key;\n    }\n    this.keyMissing = !this.key;\n  }\n\n  public finishReset(): void {\n    this.doNotMatch = null;\n    this.success = null;\n    this.error = null;\n    if (this.resetAccount.newPassword !== this.resetAccount.confirmPassword) {\n      this.doNotMatch = 'ERROR';\n    } else {\n      axios\n        .post('api/account/reset-password/finish', { key: this.key, newPassword: this.resetAccount.newPassword })\n        .then(() => {\n          this.success = 'OK';\n        })\n        .catch(() => {\n          this.success = null;\n          this.error = 'ERROR';\n        });\n    }\n  }\n\n  public openLogin() {\n    this.loginService().openLogin((<any>this).$root);\n  }\n}\n","import mod from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--1-0!./reset-password-finish.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--1-0!./reset-password-finish.component.ts?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./reset-password-finish.vue?vue&type=template&id=237f90bc&\"\nimport script from \"./reset-password-finish.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./reset-password-finish.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/wwammaww/github/we-business-project/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('237f90bc', component.options)\n    } else {\n      api.reload('237f90bc', component.options)\n    }\n    module.hot.accept(\"./reset-password-finish.vue?vue&type=template&id=237f90bc&\", function () {\n      api.rerender('237f90bc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue\"\nexport default component.exports"],"sourceRoot":""}