{"version":3,"sources":["webpack:///./src/main/webapp/app/admin/metrics/metrics.vue?74e8","webpack:///./src/main/webapp/app/admin/metrics/metrics-modal.vue?a28f","webpack:///./src/main/webapp/app/admin/metrics/metrics-modal.component.ts?db92","webpack:///./src/main/webapp/app/admin/metrics/metrics-modal.component.ts","webpack:///./src/main/webapp/app/admin/metrics/metrics-modal.vue","webpack:///./src/main/webapp/app/admin/metrics/metrics.component.ts?2d7e","webpack:///./src/main/webapp/app/admin/metrics/metrics.component.ts","webpack:///./src/main/webapp/app/admin/metrics/metrics.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","id","domProps","textContent","_s","$t","_v","staticClass","on","click","$event","refresh","icon","updatingMetrics","_e","_l","metrics","jvm","entry","key","max","formatNumber1","used","committed","variant","animated","striped","value","label","threadStats","threadDumpRunnable","threadDumpAll","threadDumpTimedWaiting","threadDumpWaiting","threadDumpBlocked","directives","name","rawName","modifiers","metricsModal","data-toggle","data-target","openModal","convertMillisecondsToDuration","processMetrics","_f","formatNumber2","isObjectExisting","garbageCollector","classesLoaded","classesUnloaded","count","mean","percode","all","filterNaN","_m","endpointsRequests","entryKey","method","methodKey","data-translate","cache","isObjectExistingAndNotEmpty","databases","active","min","idle","acquire","creation","usage","ref","size","slot","thread-dump","threadData","_withStripped","r","e","i","c","n","metrics_modalvue_type_template_id_dc79ea98_render","threadDumpFilter","threadDumpData","expression","type","input","target","composing","filterBy","threadDump","class","getBadgeClass","threadState","threadName","threadId","href","show","hidden","stackTrace","st","className","methodName","fileName","lineNumber","blockedTime","blockedCount","waitedTime","waitedCount","title","lockName","o","metrics_metrics_modal_componentvue_type_script_lang_ts_","_super","JhiMetricsModal","_this","apply","arguments","t","tslib_es6","Object","defineProperty","prototype","get","data","forEach","b","vue_property_decorator","a","d","l","component","componentNormalizer","options","__file","metrics_modal","metrics_metrics_componentvue_type_script_lang_ts_","JhiMetrics","mounted","metricsService","getMetrics","then","resultsMetrics","retrieveThreadDump","res","threads","catch","$refs","isNaN","numeral_default","format","ms","times","year","month","day","hour","minute","second","time_string","plural","Math","floor","toString","JSON","stringify","Function","components","metrics-modal","metrics_component","__webpack_exports__","default"],"mappings":"mGAAA,IAAAA,EAAA,WACA,IAAAC,EAAAC,KACAC,EAAAF,EAAAG,eACAC,EAAAJ,EAAAK,MAAAD,IAAAF,EACA,OAAAE,EACA,OAEAA,EAAA,MACAA,EACA,QAEAE,OAAoBC,GAAA,wBACpBC,UAAuBC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,qBAEvBX,EAAAY,GAAA,yBAEAZ,EAAAY,GAAA,KACAR,EACA,UAEAS,YAAA,8BACAC,IACAC,MAAA,SAAAC,GACA,OAAAhB,EAAAiB,cAKAb,EAAA,qBAAqCE,OAASY,KAAA,UAC9ClB,EAAAY,GAAA,KACAR,EACA,QAEAI,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,iCAGAX,EAAAY,GAAA,cAGA,KAGAZ,EAAAY,GAAA,KACAR,EACA,MACSI,UAAYC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,yBACrBX,EAAAY,GAAA,iBAEAZ,EAAAY,GAAA,KACAZ,EAAAmB,gBAoeAnB,EAAAoB,KAneAhB,EAAA,OAAqBS,YAAA,QACrBT,EAAA,OAAuBS,YAAA,aACvBT,EACA,MAEAI,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,gCAGAX,EAAAY,GAAA,YAEAZ,EAAAY,GAAA,KACAR,EACA,MACAJ,EAAAqB,GAAArB,EAAAsB,QAAAC,IAAA,SAAAC,EAAAC,GACA,OAAArB,EACA,OACqBqB,SAErB,IAAAD,EAAAE,IACAtB,EAAA,QACAA,EAAA,QAAAJ,EAAAY,GAAAZ,EAAAU,GAAAe,MACAzB,EAAAY,GACA,KACAZ,EAAAU,GACAV,EAAA2B,cAAAH,EAAAI,KAAA,UAEA,OACA5B,EAAAU,GAAAV,EAAA2B,cAAAH,EAAAE,IAAA,UACA,oBAGAtB,EAAA,QACAA,EAAA,QAAAJ,EAAAY,GAAAZ,EAAAU,GAAAe,MACAzB,EAAAY,GACA,IACAZ,EAAAU,GACAV,EAAA2B,cAAAH,EAAAI,KAAA,UAEA,mBAGA5B,EAAAY,GAAA,KACAR,EAAA,OACAJ,EAAAY,GACA,eACAZ,EAAAU,GACAV,EAAA2B,cAAAH,EAAAK,UAAA,UAEA,OAGA7B,EAAAY,GAAA,MACA,IAAAY,EAAAE,IACAtB,EACA,cAEAE,OACAwB,QAAA,UACAC,SAAA,GACAL,IAAAF,EAAAE,IACAM,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MAAAT,EAAAI,KACAM,MACAlC,EAAA2B,cACA,IAAAH,EAAAI,KAAAJ,EAAAE,KACA,QAIA,GAEA1B,EAAAoB,MAEA,KAGA,KAGApB,EAAAY,GAAA,KACAR,EACA,OACeS,YAAA,aAEfT,EACA,MAEAI,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,iCAGAX,EAAAY,GAAA,cAEAZ,EAAAY,GAAA,KACAR,EAAA,QACAA,EACA,QAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,oCAIAX,EAAAY,GAAA,cAEAZ,EAAAY,GAAA,IAAAZ,EAAAU,GAAAV,EAAAmC,YAAAC,uBAEApC,EAAAY,GAAA,KACAR,EACA,cAEAE,OACAwB,QAAA,UACAJ,IAAA1B,EAAAmC,YAAAE,cACAL,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MAAAjC,EAAAmC,YAAAC,mBACAF,MACAlC,EAAA2B,cACA,IAAA3B,EAAAmC,YAAAC,mBACApC,EAAAmC,YAAAE,eACA,QAIA,GAEArC,EAAAY,GAAA,KACAR,EAAA,QACAA,EACA,QAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,wCAIAX,EAAAY,GAAA,mBAEAZ,EAAAY,GACA,KAAAZ,EAAAU,GAAAV,EAAAmC,YAAAG,wBAAA,OAGAtC,EAAAY,GAAA,KACAR,EACA,cAEAE,OACAwB,QAAA,UACAJ,IAAA1B,EAAAmC,YAAAE,cACAL,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MAAAjC,EAAAmC,YAAAG,uBACAJ,MACAlC,EAAA2B,cACA,IAAA3B,EAAAmC,YAAAG,uBACAtC,EAAAmC,YAAAE,eACA,QAIA,GAEArC,EAAAY,GAAA,KACAR,EAAA,QACAA,EACA,QAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,mCAIAX,EAAAY,GAAA,aAEAZ,EAAAY,GAAA,KAAAZ,EAAAU,GAAAV,EAAAmC,YAAAI,mBAAA,OAEAvC,EAAAY,GAAA,KACAR,EACA,cAEAE,OACAwB,QAAA,UACAJ,IAAA1B,EAAAmC,YAAAE,cACAL,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MAAAjC,EAAAmC,YAAAI,kBACAL,MACAlC,EAAA2B,cACA,IAAA3B,EAAAmC,YAAAI,kBACAvC,EAAAmC,YAAAE,eACA,QAIA,GAEArC,EAAAY,GAAA,KACAR,EAAA,QACAA,EACA,QAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,mCAIAX,EAAAY,GAAA,aAEAZ,EAAAY,GAAA,KAAAZ,EAAAU,GAAAV,EAAAmC,YAAAK,mBAAA,OAEAxC,EAAAY,GAAA,KACAR,EACA,cAEAE,OACAwB,QAAA,UACAJ,IAAA1B,EAAAmC,YAAAE,cACAL,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MAAAjC,EAAAmC,YAAAK,kBACAN,MACAlC,EAAA2B,cACA,IAAA3B,EAAAmC,YAAAK,kBACAxC,EAAAmC,YAAAE,eACA,QAIA,GAEArC,EAAAY,GAAA,KACAR,EAAA,QACAJ,EAAAY,GACA,UACAZ,EAAAU,GAAAV,EAAAmC,YAAAE,eACA,cAEAjC,EACA,KAEAqC,aAEAC,KAAA,UACAC,QAAA,yBACAC,WAAsCC,mBAGtChC,YAAA,OACAP,OACAwC,cAAA,QACAC,cAAA,eAEAjC,IACAC,MAAA,SAAAC,GACA,OAAAhB,EAAAgD,gBAIA5C,EAAA,qBAA8CE,OAASY,KAAA,UACvD,MAIA,GAEAlB,EAAAY,GAAA,KACAR,EACA,OACeS,YAAA,aAEfT,EAAA,MAAAJ,EAAAY,GAAA,YACAZ,EAAAY,GAAA,KACAZ,EAAAmB,gBAgBAnB,EAAAoB,KAfAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,YAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GACAV,EAAAiD,8BACAjD,EAAAsB,QAAA4B,eAAA,yBAOAlD,EAAAY,GAAA,KACAZ,EAAAmB,gBAgBAnB,EAAAoB,KAfAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,gBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GACAV,EAAAmD,GAAA,aAAAnD,CACAA,EAAAsB,QAAA4B,eAAA,6BAOAlD,EAAAY,GAAA,KACAZ,EAAAmB,gBAiBAnB,EAAAoB,KAhBAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,uBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACA,IACApD,EAAAsB,QAAA4B,eAAA,uBAEA,UAKAlD,EAAAY,GAAA,KACAR,EACA,cACmBE,OAASwB,QAAA,UAAAJ,IAAA,IAAAM,QAAA,MAE5B5B,EAAA,kBACAE,OACA2B,MACA,IAAAjC,EAAAsB,QAAA4B,eAAA,qBACAhB,MACAlC,EAAA2B,cACA,IACA3B,EAAAsB,QAAA4B,eAAA,sBACA,QAIA,GAEAlD,EAAAY,GAAA,KACAZ,EAAAmB,gBAiBAnB,EAAAoB,KAhBAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,sBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACA,IACApD,EAAAsB,QAAA4B,eAAA,sBAEA,UAKAlD,EAAAY,GAAA,KACAR,EACA,cACmBE,OAASwB,QAAA,UAAAJ,IAAA,IAAAM,QAAA,MAE5B5B,EAAA,kBACAE,OACA2B,MACA,IAAAjC,EAAAsB,QAAA4B,eAAA,oBACAhB,MACAlC,EAAA2B,cACA,IAAA3B,EAAAsB,QAAA4B,eAAA,qBACA,QAIA,GAEAlD,EAAAY,GAAA,KACAZ,EAAAmB,gBAYAnB,EAAAoB,KAXAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,sBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GAAAV,EAAAsB,QAAA4B,eAAA,0BAKAlD,EAAAY,GAAA,KACAZ,EAAAmB,gBAkBAnB,EAAAoB,KAjBAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,4BAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAA4B,eACA,iCAQAlD,EAAAY,GAAA,KACAZ,EAAAmB,gBAgBAnB,EAAAoB,KAfAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,uBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GACAV,EAAA2B,cACA3B,EAAAsB,QAAA4B,eAAA,4BAOAlD,EAAAY,GAAA,KACAZ,EAAAmB,gBAgBAnB,EAAAoB,KAfAhB,EAAA,OAA+BS,YAAA,QAC/BT,EAAA,OAAiCS,YAAA,aACjCb,EAAAY,GAAA,wBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAAiCS,YAAA,wBACjCb,EAAAY,GACAZ,EAAAU,GACAV,EAAA2B,cACA3B,EAAAsB,QAAA4B,eAAA,8BAQA,KAIAlD,EAAAY,GAAA,KACAR,EACA,MACSI,UAAYC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,4BACrBX,EAAAY,GAAA,yBAEAZ,EAAAY,GAAA,MACAZ,EAAAmB,iBACAnB,EAAAqD,iBAAArD,EAAAsB,QAAA,oBACAlB,EAAA,OAAqBS,YAAA,QACrBT,EAAA,OAAuBS,YAAA,aACvBT,EACA,OAEAA,EAAA,QACAJ,EAAAY,GACA,8DACAZ,EAAAU,GACAV,EAAA2B,cACA3B,EAAAsB,QAAAgC,iBACA,yBACA,UAGA,kBACAtD,EAAAU,GACAV,EAAA2B,cACA3B,EAAAsB,QAAAgC,iBACA,wBACA,UAGA,kBAGAtD,EAAAY,GAAA,KACAR,EACA,cAEAE,OACAwB,QAAA,UACAJ,IACA1B,EAAAsB,QAAAgC,iBAAA,wBACAtB,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MACAjC,EAAAsB,QAAAgC,iBACA,yBAEApB,MACAlC,EAAAoD,cACA,IACApD,EAAAsB,QAAAgC,iBACA,yBAEAtD,EAAAsB,QAAAgC,iBACA,yBAEA,QAIA,IAGA,KAGAtD,EAAAY,GAAA,KACAR,EAAA,OAAuBS,YAAA,aACvBT,EACA,OAEAA,EAAA,QACAJ,EAAAY,GACA,kEACAZ,EAAAU,GACAV,EAAA2B,cACA3B,EAAAsB,QAAAgC,iBACA,0BACA,UAGA,kBACAtD,EAAAU,GACAV,EAAA2B,cACA3B,EAAAsB,QAAAgC,iBACA,2BACA,UAGA,kBAGAtD,EAAAY,GAAA,KACAR,EACA,cAEAE,OACAwB,QAAA,UACAJ,IACA1B,EAAAsB,QAAAgC,iBACA,2BAEAtB,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MACAjC,EAAAsB,QAAAgC,iBACA,0BAEApB,MACAlC,EAAAoD,cACA,IACApD,EAAAsB,QAAAgC,iBACA,0BAEAtD,EAAAsB,QAAAgC,iBACA,4BAEA,QAIA,IAGA,KAGAtD,EAAAY,GAAA,KACAR,EAAA,OAAuBS,YAAA,aACvBT,EAAA,OAAyBS,YAAA,QACzBT,EAAA,OAA2BS,YAAA,aAC3Bb,EAAAY,GAAA,oBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAA2BS,YAAA,wBAC3Bb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAAsB,QAAAgC,iBAAAC,oBAGAvD,EAAAY,GAAA,KACAR,EAAA,OAAyBS,YAAA,QACzBT,EAAA,OAA2BS,YAAA,aAC3Bb,EAAAY,GAAA,sBAEAZ,EAAAY,GAAA,KACAR,EAAA,OAA2BS,YAAA,wBAC3Bb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAAsB,QAAAgC,iBAAAE,wBAIAxD,EAAAY,GAAA,KACAR,EAAA,OAAuBS,YAAA,qBACvBT,EAAA,SAA2BS,YAAA,wBAC3BT,EAAA,SACAA,EAAA,MACAA,EAAA,MACAJ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,yCAIAX,EAAAY,GAAA,WAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,wCAIAX,EAAAY,GAAA,UAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,aAIAZ,EAAAY,GAAA,KACAR,EAAA,SACAA,EAAA,MACAA,EAAA,MAAAJ,EAAAY,GAAA,kBACAZ,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAsB,QAAAgC,iBAAA,gBAAAG,UAIAzD,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgC,iBAAA,gBAAAI,UAKA1D,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgC,iBAAA,4BAKAtD,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgC,iBAAA,yBAKAtD,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgC,iBAAA,0BAKAtD,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgC,iBAAA,0BAKAtD,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgC,iBAAA,0BAKAtD,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgC,iBAAA,gBAAA5B,mBAUA1B,EAAAoB,KACApB,EAAAY,GAAA,KACAR,EACA,MACSI,UAAYC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,8BACrBX,EAAAY,GAAA,yCAEAZ,EAAAY,GAAA,MACAZ,EAAAmB,iBACAnB,EAAAqD,iBAAArD,EAAAsB,QAAA,wBACAlB,EAAA,SAAuBS,YAAA,wBACvBT,EAAA,SACAA,EAAA,MACAA,EACA,MAEAI,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,mCAGAX,EAAAY,GAAA,UAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,oCAIAX,EAAAY,GAAA,WAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,mCAGAX,EAAAY,GAAA,UAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,kCAGAX,EAAAY,GAAA,aAIAZ,EAAAY,GAAA,KACAR,EACA,QACAJ,EAAAqB,GAAArB,EAAAsB,QAAA,wBAAAqC,QAAA,SACAnC,EACAC,GAEA,OAAArB,EAAA,MAAiCqB,QACjCrB,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAe,MACAzB,EAAAY,GAAA,KACAR,EACA,MAEAA,EACA,cAEAE,OACAwB,QAAA,UACAC,SAAA,GACAL,IACA1B,EAAAsB,QAAA,wBAAAsC,IAAAH,MACAzB,QAAA,MAIA5B,EAAA,kBACAE,OACA2B,MAAAT,EAAAiC,MACAvB,MAAAlC,EAAA2B,cAAAH,EAAAiC,WAIA,IAGA,GAEAzD,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACA,aACAZ,EAAAU,GAAAV,EAAAoD,cAAApD,EAAA6D,UAAArC,EAAAkC,QACA,cAGA1D,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAAoD,cAAA5B,EAAAE,aAIA,KAGA1B,EAAAoB,KACApB,EAAAY,GAAA,KACAR,EAAA,MAAAJ,EAAAY,GAAA,8CACAZ,EAAAY,GAAA,KACAZ,EAAAmB,gBAiCAnB,EAAAoB,KAhCAhB,EAAA,OAAqBS,YAAA,qBACrBT,EAAA,SAAyBS,YAAA,wBACzBb,EAAA8D,GAAA,GACA9D,EAAAY,GAAA,KACAR,EACA,SAEAJ,EAAAqB,GAAArB,EAAAsB,QAAAyC,kBAAA,SACAvC,EACAwC,GAEA,OAAAhE,EAAAqB,GAAAG,EAAA,SAAAyC,EAAAC,GACA,OAAA9D,EAAA,MAAuCqB,IAAAuC,EAAA,IAAAE,IACvC9D,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAwD,MACAlE,EAAAY,GAAA,KACAR,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAsD,MACAhE,EAAAY,GAAA,KACAR,EAAA,MAAkCS,YAAA,eAClCb,EAAAY,GAAAZ,EAAAU,GAAAuD,EAAAR,UAEAzD,EAAAY,GAAA,KACAR,EAAA,MAAkCS,YAAA,eAClCb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAAoD,cAAAa,EAAAP,iBAMA,OAKA1D,EAAAY,GAAA,KACAR,EACA,MACSI,UAAYC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,2BACrBX,EAAAY,GAAA,sBAEAZ,EAAAY,GAAA,MACAZ,EAAAmB,iBAAAnB,EAAAqD,iBAAArD,EAAAsB,QAAA,SACAlB,EAAA,OAAqBS,YAAA,qBACrBT,EAAA,SAAyBS,YAAA,wBACzBT,EAAA,SACAA,EAAA,MACAA,EACA,MAEAI,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,+BAGAX,EAAAY,GAAA,gBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,wBAE9BnE,EAAAY,GAAA,gBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,0BAE9BnE,EAAAY,GAAA,kBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,wBAE9BnE,EAAAY,GAAA,gBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,wBAE9BnE,EAAAY,GAAA,gBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,4BAE9BnE,EAAAY,GAAA,oBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,6BAE9BnE,EAAAY,GAAA,qBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,8BAE9BnE,EAAAY,GAAA,iBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAP,OAA8B6D,iBAAA,+BAE9BnE,EAAAY,GAAA,sBAIAZ,EAAAY,GAAA,KACAR,EACA,QACAJ,EAAAqB,GAAArB,EAAAsB,QAAA8C,MAAA,SAAA5C,EAAAC,GACA,OAAArB,EAAA,MAAmCqB,QACnCrB,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAe,MACAzB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA,sBAEAxB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA,uBAEAxB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACAZ,EAAAU,GACAc,EAAA,kBAAAA,EAAA,uBAIAxB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA,kBAEAxB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA,sBAEAxB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA,uBAEAxB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACA,eACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UACA,IAAArC,EAAA,mBACAA,EAAA,kBACAA,EAAA,uBAIA,gBAGAxB,EAAAY,GAAA,KACAR,EAAA,MAA8BS,YAAA,eAC9Bb,EAAAY,GACA,eACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UACA,IAAArC,EAAA,oBACAA,EAAA,kBACAA,EAAA,uBAIA,oBAKA,OAIAxB,EAAAoB,KACApB,EAAAY,GAAA,KACAR,EACA,MAEAI,UAAqBC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,gCAErBX,EAAAY,GAAA,iDAEAZ,EAAAY,GAAA,MACAZ,EAAAmB,iBACAnB,EAAAqE,4BAAArE,EAAAsB,QAAA,aACAlB,EAAA,OAAqBS,YAAA,qBACrBT,EAAA,SAAyBS,YAAA,wBACzBT,EAAA,SACAA,EAAA,MACAA,EAAA,MACAA,EACA,QAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,gCAIAX,EAAAY,GAAA,2BAEAZ,EAAAY,GACA,wBACAZ,EAAAU,GAAAV,EAAAsB,QAAAgD,UAAAC,OAAAtC,OACA,UACAjC,EAAAU,GAAAV,EAAAsB,QAAAgD,UAAAE,IAAAvC,OACA,qBACAjC,EAAAU,GAAAV,EAAAsB,QAAAgD,UAAA5C,IAAAO,OACA,sBACAjC,EAAAU,GAAAV,EAAAsB,QAAAgD,UAAAG,KAAAxC,OACA,iBAGAjC,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,gCAGAX,EAAAY,GAAA,WAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,+BAGAX,EAAAY,GAAA,UAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,uCAIAX,EAAAY,GAAA,SAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,aACAL,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,8BAGAX,EAAAY,GAAA,aAIAZ,EAAAY,GAAA,KACAR,EAAA,SACAA,EAAA,MACAA,EAAA,MAAAJ,EAAAY,GAAA,aACAZ,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAAsB,QAAAgD,UAAAI,QAAAjB,UAEAzD,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UAAA7D,EAAAsB,QAAAgD,UAAAI,QAAAhB,WAKA1D,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAI,QAAA,YAIA1E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAI,QAAA,SAIA1E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAI,QAAA,UAIA1E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAI,QAAA,UAIA1E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAI,QAAA,UAIA1E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UAAA7D,EAAAsB,QAAAgD,UAAAI,QAAAhD,YAMA1B,EAAAY,GAAA,KACAR,EAAA,MACAA,EAAA,MAAAJ,EAAAY,GAAA,cACAZ,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAAsB,QAAAgD,UAAAK,SAAAlB,UAEAzD,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UAAA7D,EAAAsB,QAAAgD,UAAAK,SAAAjB,WAKA1D,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAK,SAAA,YAIA3E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAK,SAAA,SAIA3E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgD,UAAAK,SAAA,UAKA3E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgD,UAAAK,SAAA,UAKA3E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAAsB,QAAAgD,UAAAK,SAAA,UAKA3E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UAAA7D,EAAAsB,QAAAgD,UAAAK,SAAAjD,OAEA,kBAIA1B,EAAAY,GAAA,KACAR,EAAA,MACAA,EAAA,MAAAJ,EAAAY,GAAA,WACAZ,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAAsB,QAAAgD,UAAAM,MAAAnB,UAEAzD,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UAAA7D,EAAAsB,QAAAgD,UAAAM,MAAAlB,WAKA1D,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAM,MAAA,YAIA5E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAM,MAAA,SAIA5E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAM,MAAA,UAIA5E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAM,MAAA,UAIA5E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cAAApD,EAAAsB,QAAAgD,UAAAM,MAAA,UAIA5E,EAAAY,GAAA,KACAR,EAAA,MAA4BS,YAAA,eAC5Bb,EAAAY,GACAZ,EAAAU,GACAV,EAAAoD,cACApD,EAAA6D,UAAA7D,EAAAsB,QAAAgD,UAAAM,MAAAlD,kBASA1B,EAAAoB,KACApB,EAAAY,GAAA,KACAR,EACA,WACSyE,IAAA,eAAAvE,OAA8BwE,KAAA,QAEvC1E,EACA,MAEAS,YAAA,cACAP,OAAsByE,KAAA,cAAAxE,GAAA,oBACtBC,UACAC,YAAAT,EAAAU,GAAAV,EAAAW,GAAA,oCAEAoE,KAAA,gBAEA/E,EAAAY,GAAA,kBAEAZ,EAAAY,GAAA,KACAR,EAAA,iBAA+BE,OAAS0E,cAAAhF,EAAAiF,eAExC,IAGA,IAqBAlF,EAAAmF,iBAAA,IAAAC,EAAAC,EAAA,QAAAC,EAAAD,EAAA,QAAAE,EAAAF,EAAAG,EAAAF,GCzkDIG,EAAM,WACV,IAAAxF,EAAAC,KACAC,EAAAF,EAAAG,eACAC,EAAAJ,EAAAK,MAAAD,IAAAF,EACA,OAAAE,EACA,OACKS,YAAA,eAELT,EACA,QAEAS,YAAA,sBACAC,IACAC,MAAA,SAAAC,GACAhB,EAAAyF,iBAAA,OAKAzF,EAAAY,GAAA,QACAR,EAAA,QAAsBS,YAAA,mCACtBb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAA0F,eAAArD,oBAIArC,EAAAY,GAAA,WACAR,EACA,QAEAS,YAAA,sBACAC,IACAC,MAAA,SAAAC,GACAhB,EAAAyF,iBAAA,eAKAzF,EAAAY,GAAA,aACAR,EAAA,QAAsBS,YAAA,mCACtBb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAA0F,eAAAtD,yBAIApC,EAAAY,GAAA,WACAR,EACA,QAEAS,YAAA,mBACAC,IACAC,MAAA,SAAAC,GACAhB,EAAAyF,iBAAA,cAKAzF,EAAAY,GAAA,YACAR,EAAA,QAAsBS,YAAA,mCACtBb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAA0F,eAAAnD,wBAIAvC,EAAAY,GAAA,WACAR,EACA,QAEAS,YAAA,sBACAC,IACAC,MAAA,SAAAC,GACAhB,EAAAyF,iBAAA,oBAKAzF,EAAAY,GAAA,kBACAR,EAAA,QAAsBS,YAAA,mCACtBb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAA0F,eAAApD,6BAIAtC,EAAAY,GAAA,WACAR,EACA,QAEAS,YAAA,qBACAC,IACAC,MAAA,SAAAC,GACAhB,EAAAyF,iBAAA,cAKAzF,EAAAY,GAAA,YACAR,EAAA,QAAsBS,YAAA,mCACtBb,EAAAY,GAAAZ,EAAAU,GAAAV,EAAA0F,eAAAlD,wBAIAxC,EAAAY,GAAA,WACAR,EAAA,OAAiBS,YAAA,SAAsBb,EAAAY,GAAA,OACvCZ,EAAAY,GAAA,sBACAR,EAAA,SACAqC,aAEAC,KAAA,QACAC,QAAA,UACAV,MAAAjC,EAAAyF,iBACAE,WAAA,qBAGA9E,YAAA,eACAP,OAAgBsF,KAAA,QAChBpF,UAAmByB,MAAAjC,EAAAyF,kBACnB3E,IACA+E,MAAA,SAAA7E,GACAA,EAAA8E,OAAAC,YAGA/F,EAAAyF,iBAAAzE,EAAA8E,OAAA7D,WAIAjC,EAAAY,GAAA,KACAZ,EAAAqB,GAAArB,EAAAgG,SAAAhG,EAAAiG,WAAAjG,EAAAyF,kBAAA,SACAjE,EACAC,GAEA,OAAArB,EAAA,OAA0BqB,MAAAZ,YAAA,QAC1BT,EAAA,MACAA,EACA,QAEAS,YAAA,QACAqF,MAAAlG,EAAAmG,cAAA3E,EAAA4E,eAEApG,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA4E,gBAEApG,EAAAY,GACA,IACAZ,EAAAU,GAAAc,EAAA6E,YACA,QACArG,EAAAU,GAAAc,EAAA8E,UACA,mBAEAlG,EACA,KAEAE,OAAwBiG,KAAA,uBACxBzF,IACAC,MAAA,SAAAC,GACAQ,EAAAgF,MAAAhF,EAAAgF,SAKApG,EACA,QAEAE,OAA4BmG,OAAAjF,EAAAgF,MAC5BhG,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,qCAIAX,EAAAY,GAAA,qBAEAZ,EAAAY,GAAA,KACAR,EACA,QAEAE,OAA4BmG,QAAAjF,EAAAgF,MAC5BhG,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,qCAIAX,EAAAY,GAAA,yBAKAZ,EAAAY,GAAA,KACAR,EAAA,OAAqBS,YAAA,OAAAP,OAA8BmG,QAAAjF,EAAAgF,QACnDpG,EACA,OACeS,YAAA,aACfb,EAAAqB,GAAAG,EAAAkF,WAAA,SAAAC,EAAAlF,GACA,OAAArB,EAAA,OAAkCqB,MAAAZ,YAAA,UAClCT,EAAA,QACAJ,EAAAY,GACAZ,EAAAU,GAAAiG,EAAAC,WAAA,IAAA5G,EAAAU,GAAAiG,EAAAE,YAAA,KAEAzG,EAAA,QACAJ,EAAAY,GAAAZ,EAAAU,GAAAiG,EAAAG,UAAA,IAAA9G,EAAAU,GAAAiG,EAAAI,eAEA/G,EAAAY,GAAA,OAEAZ,EAAAY,GAAA,KACAR,EAAA,QAA8BS,YAAA,aAG9B,KAGAb,EAAAY,GAAA,KACAR,EAAA,SAAuBS,YAAA,oCACvBT,EAAA,SACAA,EAAA,MACAA,EACA,MAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,4CAIAX,EAAAY,GAAA,kBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,6CAIAX,EAAAY,GAAA,mBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,2CAIAX,EAAAY,GAAA,iBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,4CAIAX,EAAAY,GAAA,kBAEAZ,EAAAY,GAAA,KACAR,EACA,MAEAI,UACAC,YAAAT,EAAAU,GACAV,EAAAW,GAAA,yCAIAX,EAAAY,GAAA,mBAIAZ,EAAAY,GAAA,KACAR,EAAA,SACAA,EAAA,MACAA,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAc,EAAAwF,gBACAhH,EAAAY,GAAA,KACAR,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAc,EAAAyF,iBACAjH,EAAAY,GAAA,KACAR,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA0F,eACAlH,EAAAY,GAAA,KACAR,EAAA,MAAAJ,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA2F,gBACAnH,EAAAY,GAAA,KACAR,EACA,MAEAS,YAAA,yBACAP,OAA4B8G,MAAA5F,EAAA6F,YAE5BjH,EAAA,QAAAJ,EAAAY,GAAAZ,EAAAU,GAAAc,EAAA6F,0BAQA,IAIA7B,EAAMN,iBAAA,IAAAoC,EAAAlC,EAAA,QC3SgJmC,ECGtJ,SAAAC,GADA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAA1H,KAAA2H,YAAA3H,YAKSyH,EAAAjC,iBAAwB,KAAAoC,EAsCjC,OA1C6CC,EAAAxC,EAAAmC,EAAAD,GAM3CO,OAAAC,eAAIP,EAAAQ,UAAA,kBAAcC,IAAlB,WACE,IAAMC,GACJ9F,cAAe,EACfG,kBAAmB,EACnBJ,mBAAoB,EACpBE,uBAAwB,EACxBC,kBAAmB,GAgBrB,OAdItC,KAAKgG,aACPhG,KAAKgG,WAAWmC,QAAQ,SAAAnG,GACI,aAAtBA,EAAMmE,YACR+B,EAAK/F,oBAAsB,EACI,YAAtBH,EAAMmE,YACf+B,EAAK5F,mBAAqB,EACK,kBAAtBN,EAAMmE,YACf+B,EAAK7F,wBAA0B,EACA,YAAtBL,EAAMmE,cACf+B,EAAK3F,mBAAqB,KAG9B2F,EAAK9F,cAAgB8F,EAAK/F,mBAAqB+F,EAAK5F,kBAAoB4F,EAAK7F,uBAAyB6F,EAAK3F,mBAEtG2F,mCAGFV,EAAAQ,UAAA9B,cAAP,SAAqBC,GACnB,MAAoB,aAAhBA,EACK,gBACkB,YAAhBA,EACF,aACkB,kBAAhBA,EACF,gBACkB,YAAhBA,EACF,uBArCX0B,EAAAO,GADCN,OAAAO,EAAAhD,EAAAyC,+DADiCD,EAAAO,GADnCC,EAAAC,GACoBd,GAArB,CAA6Ca,EAAAE,GAAAC,EAAArD,EAAA,QCI7CsD,EAAgBX,OAAAY,EAAAJ,EAAAR,CACdR,EACA/B,MHiSiB,EG9RnB,KACA,KACA,MAuBAkD,EAAAE,QAAAC,OAAA,sDACe,IAAAC,EAAAJ,UCtCiIK,ECUhJ,SAAAvB,GALA,SAAAwB,IAAA,IAAAtB,EAAA,OAAAF,KAAAG,MAAA1H,KAAA2H,YAAA3H,YAMSyH,EAAApG,WACAoG,EAAAzC,WAAkB,KAClByC,EAAAvF,eACAuF,EAAAvG,mBAAkB0G,EA6G3B,OAjHwCC,EAAAxC,EAAA0D,EAAAxB,GAQ/BwB,EAAAf,UAAAgB,QAAP,WACEhJ,KAAKgB,WAGA+H,EAAAf,UAAAhH,QAAP,eAAAyG,EAAAzH,KACEA,KAAKiJ,iBACFC,aACAC,KAAK,SAAAC,GACJ3B,EAAKpG,QAAU+H,EAAelB,KAC9BT,EAAKwB,iBACFI,qBACAF,KAAK,SAAAG,GACJ7B,EAAKvG,mBACLuG,EAAKzC,WAAasE,EAAIpB,KAAKqB,QAE3B9B,EAAKvF,aACHC,mBAAoB,EACpBG,kBAAmB,EACnBD,uBAAwB,EACxBE,kBAAmB,EACnBH,cAAe,GAGjBqF,EAAKzC,WAAWmD,QAAQ,SAAAnG,GACI,aAAtBA,EAAMmE,YACRsB,EAAKvF,YAAYC,oBAAsB,EACR,YAAtBH,EAAMmE,YACfsB,EAAKvF,YAAYI,mBAAqB,EACP,kBAAtBN,EAAMmE,YACfsB,EAAKvF,YAAYG,wBAA0B,EACZ,YAAtBL,EAAMmE,cACfsB,EAAKvF,YAAYK,mBAAqB,KAI1CkF,EAAKvF,YAAYE,cACfqF,EAAKvF,YAAYC,mBACjBsF,EAAKvF,YAAYI,kBACjBmF,EAAKvF,YAAYG,uBACjBoF,EAAKvF,YAAYK,kBAEnBkF,EAAKvG,qBAENsI,MAAM,WACL/B,EAAKvG,uBAGVsI,MAAM,WACL/B,EAAKvG,sBAIX6H,EAAAf,UAAAjF,UAAA,WACY/C,KAAKyJ,MAAM7G,aAAc2D,MAC3BvG,KAAKyJ,MAAM7G,aAAc2D,QAInCwC,EAAAf,UAAApE,UAAA,SAAUgC,GACR,OAAI8D,MAAM9D,GACD,EAEFA,GAGTmD,EAAAf,UAAAtG,cAAA,SAAcM,GACZ,OAAO2H,IAAQ3H,GAAO4H,OAAO,QAG/Bb,EAAAf,UAAA7E,cAAA,SAAcnB,GACZ,OAAO2H,IAAQ3H,GAAO4H,OAAO,SAG/Bb,EAAAf,UAAAhF,8BAAA,SAA8B6G,GAC5B,IAAMC,GACJC,KAAM,SACNC,MAAO,UACPC,IAAK,MACLC,KAAM,KACNC,OAAQ,IACRC,OAAQ,KAENC,EAAc,GACdC,EAAS,GACb,IAAK,IAAM9I,KAAOsI,EACkB,EAA9BS,KAAKC,MAAMX,EAAKC,EAAMtI,MAEtB8I,EADgC,EAA9BC,KAAKC,MAAMX,EAAKC,EAAMtI,IACf,IAEA,GAEX6I,GAAeE,KAAKC,MAAMX,EAAKC,EAAMtI,IAAMiJ,WAAa,IAAMjJ,EAAIiJ,WAAaH,EAAS,IACxFT,GAAUC,EAAMtI,GAAO+I,KAAKC,MAAMX,EAAKC,EAAMtI,KAGjD,OAAO6I,GAGFtB,EAAAf,UAAA5E,iBAAP,SAAwB/B,EAAcG,GACpC,OAAOH,GAAWA,EAAQG,IAGrBuH,EAAAf,UAAA5D,4BAAP,SAAmC/C,EAAcG,GAC/C,OAAOxB,KAAKoD,iBAAiB/B,EAASG,IAAyC,OAAjCkJ,KAAKC,UAAUtJ,EAAQG,KAzGvEqG,EAAAO,GADCN,OAAAO,EAAAD,EAAAN,CAAO,kBAAA5C,EAAAqD,EAAA,cAAAqC,WAAAhD,EAAAI,UAAA,yBALqBH,EAAAO,GAL9BN,OAAAO,EAAAC,EAAAR,EACC+C,YACEC,gBAAiBjC,MAGAE,GAArB,CAAwCV,EAAAE,GCHpCwC,EAAYjD,OAAAY,EAAAJ,EAAAR,CACdgB,EACAhJ,GP+iDF,WACA,IAAAC,EAAAC,KACAC,EAAAF,EAAAG,eACAC,EAAAJ,EAAAK,MAAAD,IAAAF,EACA,OAAAE,EAAA,SACAA,EAAA,MACAA,EAAA,MAAAJ,EAAAY,GAAA,YACAZ,EAAAY,GAAA,KACAR,EAAA,MAAAJ,EAAAY,GAAA,kBACAZ,EAAAY,GAAA,KACAR,EAAA,MAAkBS,YAAA,eAA4Bb,EAAAY,GAAA,WAC9CZ,EAAAY,GAAA,KACAR,EAAA,MAAkBS,YAAA,eAA4Bb,EAAAY,GAAA,mBOxjD9C,KACA,KACA,MAuBAoK,EAASpC,QAAAC,OAAA,gDACMoC,EAAAC,QAAAF","file":"app/15.c1f52d746479b3540c33.chunk.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h2\", [\n        _c(\n          \"span\",\n          {\n            attrs: { id: \"metrics-page-heading\" },\n            domProps: { textContent: _vm._s(_vm.$t(\"metrics.title\")) }\n          },\n          [_vm._v(\"Application Metrics\")]\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn btn-primary float-right\",\n            on: {\n              click: function($event) {\n                return _vm.refresh()\n              }\n            }\n          },\n          [\n            _c(\"font-awesome-icon\", { attrs: { icon: \"sync\" } }),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              {\n                domProps: {\n                  textContent: _vm._s(_vm.$t(\"metrics['refresh.button']\"))\n                }\n              },\n              [_vm._v(\"Refresh\")]\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.jvm.title\")) } },\n        [_vm._v(\"JVM Metrics\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics\n        ? _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\n                \"h4\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"metrics.jvm.memory.title\"))\n                  }\n                },\n                [_vm._v(\"Memory\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                _vm._l(_vm.metrics.jvm, function(entry, key) {\n                  return _c(\n                    \"div\",\n                    { key: key },\n                    [\n                      entry.max !== -1\n                        ? _c(\"span\", [\n                            _c(\"span\", [_vm._v(_vm._s(key))]),\n                            _vm._v(\n                              \" (\" +\n                                _vm._s(\n                                  _vm.formatNumber1(entry.used / 1048576)\n                                ) +\n                                \"M / \" +\n                                _vm._s(_vm.formatNumber1(entry.max / 1048576)) +\n                                \"M)\\n          \"\n                            )\n                          ])\n                        : _c(\"span\", [\n                            _c(\"span\", [_vm._v(_vm._s(key))]),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.formatNumber1(entry.used / 1048576)\n                                ) +\n                                \"M\\n          \"\n                            )\n                          ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", [\n                        _vm._v(\n                          \"Committed : \" +\n                            _vm._s(\n                              _vm.formatNumber1(entry.committed / 1048576)\n                            ) +\n                            \"M\"\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      entry.max !== -1\n                        ? _c(\n                            \"b-progress\",\n                            {\n                              attrs: {\n                                variant: \"success\",\n                                animated: \"\",\n                                max: entry.max,\n                                striped: \"\"\n                              }\n                            },\n                            [\n                              _c(\"b-progress-bar\", {\n                                attrs: {\n                                  value: entry.used,\n                                  label:\n                                    _vm.formatNumber1(\n                                      (entry.used * 100) / entry.max\n                                    ) + \"%\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                }),\n                0\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-md-4\" },\n              [\n                _c(\n                  \"h4\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"metrics.jvm.threads.title\"))\n                    }\n                  },\n                  [_vm._v(\"Threads \")]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.runnable\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Runnable\")]\n                  ),\n                  _vm._v(\" \" + _vm._s(_vm.threadStats.threadDumpRunnable))\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\"\n                    }\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpRunnable,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpRunnable * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.timedwaiting\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Timed Waiting\")]\n                  ),\n                  _vm._v(\n                    \" (\" + _vm._s(_vm.threadStats.threadDumpTimedWaiting) + \")\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\"\n                    }\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpTimedWaiting,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpTimedWaiting * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.waiting\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Waiting\")]\n                  ),\n                  _vm._v(\" (\" + _vm._s(_vm.threadStats.threadDumpWaiting) + \")\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\"\n                    }\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpWaiting,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpWaiting * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _c(\n                    \"span\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.jvm.threads.blocked\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Blocked\")]\n                  ),\n                  _vm._v(\" (\" + _vm._s(_vm.threadStats.threadDumpBlocked) + \")\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  {\n                    attrs: {\n                      variant: \"success\",\n                      max: _vm.threadStats.threadDumpAll,\n                      striped: \"\"\n                    }\n                  },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value: _vm.threadStats.threadDumpBlocked,\n                        label:\n                          _vm.formatNumber1(\n                            (_vm.threadStats.threadDumpBlocked * 100) /\n                              _vm.threadStats.threadDumpAll\n                          ) + \"%\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [\n                  _vm._v(\n                    \"Total: \" +\n                      _vm._s(_vm.threadStats.threadDumpAll) +\n                      \"\\n        \"\n                  ),\n                  _c(\n                    \"a\",\n                    {\n                      directives: [\n                        {\n                          name: \"b-modal\",\n                          rawName: \"v-b-modal.metricsModal\",\n                          modifiers: { metricsModal: true }\n                        }\n                      ],\n                      staticClass: \"hand\",\n                      attrs: {\n                        \"data-toggle\": \"modal\",\n                        \"data-target\": \"#threadDump\"\n                      },\n                      on: {\n                        click: function($event) {\n                          return _vm.openModal()\n                        }\n                      }\n                    },\n                    [_c(\"font-awesome-icon\", { attrs: { icon: \"eye\" } })],\n                    1\n                  )\n                ])\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-md-4\" },\n              [\n                _c(\"h4\", [_vm._v(\"System\")]),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-4\" }, [\n                        _vm._v(\"Uptime\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-8 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.convertMillisecondsToDuration(\n                              _vm.metrics.processMetrics[\"process.uptime\"]\n                            )\n                          )\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-4\" }, [\n                        _vm._v(\"Start time\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-8 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"formatDate\")(\n                              _vm.metrics.processMetrics[\"process.start.time\"]\n                            )\n                          )\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"Process CPU usage\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              100 *\n                                _vm.metrics.processMetrics[\"process.cpu.usage\"]\n                            )\n                          ) + \" %\"\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  { attrs: { variant: \"success\", max: 100, striped: \"\" } },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value:\n                          100 * _vm.metrics.processMetrics[\"process.cpu.usage\"],\n                        label:\n                          _vm.formatNumber1(\n                            100 *\n                              _vm.metrics.processMetrics[\"process.cpu.usage\"]\n                          ) + \"%\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"System CPU usage\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              100 *\n                                _vm.metrics.processMetrics[\"system.cpu.usage\"]\n                            )\n                          ) + \" %\"\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"b-progress\",\n                  { attrs: { variant: \"success\", max: 100, striped: \"\" } },\n                  [\n                    _c(\"b-progress-bar\", {\n                      attrs: {\n                        value:\n                          100 * _vm.metrics.processMetrics[\"system.cpu.usage\"],\n                        label:\n                          _vm.formatNumber1(\n                            100 * _vm.metrics.processMetrics[\"system.cpu.usage\"]\n                          ) + \"%\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"System CPU count\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(_vm.metrics.processMetrics[\"system.cpu.count\"])\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"System 1m Load average\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.metrics.processMetrics[\n                                \"system.load.average.1m\"\n                              ]\n                            )\n                          )\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"Process files max\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber1(\n                              _vm.metrics.processMetrics[\"process.files.max\"]\n                            )\n                          )\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.updatingMetrics\n                  ? _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-md-9\" }, [\n                        _vm._v(\"Process files open\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.formatNumber1(\n                              _vm.metrics.processMetrics[\"process.files.open\"]\n                            )\n                          )\n                        )\n                      ])\n                    ])\n                  : _vm._e()\n              ],\n              1\n            )\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.jvm.gc.title\")) } },\n        [_vm._v(\"Garbage collections\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics &&\n      _vm.isObjectExisting(_vm.metrics, \"garbageCollector\")\n        ? _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\"span\", [\n                    _vm._v(\n                      \"\\n          GC Live Data Size/GC Max Data Size\\n          (\" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.live.data.size\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M\\n          / \" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.max.data.size\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M)\\n        \"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-progress\",\n                    {\n                      attrs: {\n                        variant: \"success\",\n                        max:\n                          _vm.metrics.garbageCollector[\"jvm.gc.max.data.size\"],\n                        striped: \"\"\n                      }\n                    },\n                    [\n                      _c(\"b-progress-bar\", {\n                        attrs: {\n                          value:\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.live.data.size\"\n                            ],\n                          label:\n                            _vm.formatNumber2(\n                              (100 *\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.live.data.size\"\n                                ]) /\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.max.data.size\"\n                                ]\n                            ) + \"%\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\"span\", [\n                    _vm._v(\n                      \"\\n          GC Memory Promoted/GC Memory Allocated\\n          (\" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.memory.promoted\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M\\n          / \" +\n                        _vm._s(\n                          _vm.formatNumber1(\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.memory.allocated\"\n                            ] / 1048576\n                          )\n                        ) +\n                        \"M)\\n        \"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-progress\",\n                    {\n                      attrs: {\n                        variant: \"success\",\n                        max:\n                          _vm.metrics.garbageCollector[\n                            \"jvm.gc.memory.allocated\"\n                          ],\n                        striped: \"\"\n                      }\n                    },\n                    [\n                      _c(\"b-progress-bar\", {\n                        attrs: {\n                          value:\n                            _vm.metrics.garbageCollector[\n                              \"jvm.gc.memory.promoted\"\n                            ],\n                          label:\n                            _vm.formatNumber2(\n                              (100 *\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.memory.promoted\"\n                                ]) /\n                                _vm.metrics.garbageCollector[\n                                  \"jvm.gc.memory.allocated\"\n                                ]\n                            ) + \"%\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-md-4\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-md-9\" }, [\n                  _vm._v(\"Classes loaded\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                  _vm._v(_vm._s(_vm.metrics.garbageCollector.classesLoaded))\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-md-9\" }, [\n                  _vm._v(\"Classes unloaded\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-md-3 text-right\" }, [\n                  _vm._v(_vm._s(_vm.metrics.garbageCollector.classesUnloaded))\n                ])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"table-responsive\" }, [\n              _c(\"table\", { staticClass: \"table table-striped\" }, [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\"th\"),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.count\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"Count\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.mean\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"Mean\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.min\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"Min\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p50\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"p50\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p75\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"p75\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p95\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"p95\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.p99\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"p99\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"th\",\n                      {\n                        staticClass: \"text-right\",\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.servicesstats.table.max\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"Max\")]\n                    )\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"tbody\", [\n                  _c(\"tr\", [\n                    _c(\"td\", [_vm._v(\"jvm.gc.pause\")]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.metrics.garbageCollector[\"jvm.gc.pause\"].count\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"].mean\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\"0.0\"]\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\"0.5\"]\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\"0.75\"]\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\"0.95\"]\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"][\"0.99\"]\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.formatNumber2(\n                            _vm.metrics.garbageCollector[\"jvm.gc.pause\"].max\n                          )\n                        )\n                      )\n                    ])\n                  ])\n                ])\n              ])\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.jvm.http.title\")) } },\n        [_vm._v(\"HTTP requests (time in millisecond)\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics &&\n      _vm.isObjectExisting(_vm.metrics, \"http.server.requests\")\n        ? _c(\"table\", { staticClass: \"table table-striped\" }, [\n            _c(\"thead\", [\n              _c(\"tr\", [\n                _c(\n                  \"th\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"metrics.jvm.http.table.code\"))\n                    }\n                  },\n                  [_vm._v(\"Code\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"th\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.http.table.count\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Count\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"th\",\n                  {\n                    staticClass: \"text-right\",\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"metrics.jvm.http.table.mean\"))\n                    }\n                  },\n                  [_vm._v(\"Mean\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"th\",\n                  {\n                    staticClass: \"text-right\",\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"metrics.jvm.http.table.max\"))\n                    }\n                  },\n                  [_vm._v(\"Max\")]\n                )\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"tbody\",\n              _vm._l(_vm.metrics[\"http.server.requests\"][\"percode\"], function(\n                entry,\n                key\n              ) {\n                return _c(\"tr\", { key: key }, [\n                  _c(\"td\", [_vm._v(_vm._s(key))]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"td\",\n                    [\n                      _c(\n                        \"b-progress\",\n                        {\n                          attrs: {\n                            variant: \"success\",\n                            animated: \"\",\n                            max:\n                              _vm.metrics[\"http.server.requests\"][\"all\"].count,\n                            striped: \"\"\n                          }\n                        },\n                        [\n                          _c(\"b-progress-bar\", {\n                            attrs: {\n                              value: entry.count,\n                              label: _vm.formatNumber1(entry.count)\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      \"\\n        \" +\n                        _vm._s(_vm.formatNumber2(_vm.filterNaN(entry.mean))) +\n                        \"\\n      \"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(_vm._s(_vm.formatNumber2(entry.max)))\n                  ])\n                ])\n              }),\n              0\n            )\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"h3\", [_vm._v(\"Endpoints requests (time in millisecond)\")]),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics\n        ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\"table\", { staticClass: \"table table-striped\" }, [\n              _vm._m(0),\n              _vm._v(\" \"),\n              _c(\n                \"tbody\",\n                [\n                  _vm._l(_vm.metrics.endpointsRequests, function(\n                    entry,\n                    entryKey\n                  ) {\n                    return _vm._l(entry, function(method, methodKey) {\n                      return _c(\"tr\", { key: entryKey + \"-\" + methodKey }, [\n                        _c(\"td\", [_vm._v(_vm._s(methodKey))]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(entryKey))]),\n                        _vm._v(\" \"),\n                        _c(\"td\", { staticClass: \"text-right\" }, [\n                          _vm._v(_vm._s(method.count))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", { staticClass: \"text-right\" }, [\n                          _vm._v(_vm._s(_vm.formatNumber2(method.mean)))\n                        ])\n                      ])\n                    })\n                  })\n                ],\n                2\n              )\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { domProps: { textContent: _vm._s(_vm.$t(\"metrics.cache.title\")) } },\n        [_vm._v(\"Cache statistics\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics && _vm.isObjectExisting(_vm.metrics, \"cache\")\n        ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\"table\", { staticClass: \"table table-striped\" }, [\n              _c(\"thead\", [\n                _c(\"tr\", [\n                  _c(\n                    \"th\",\n                    {\n                      domProps: {\n                        textContent: _vm._s(_vm.$t(\"metrics.cache.cachename\"))\n                      }\n                    },\n                    [_vm._v(\"Cache name\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.hits\" }\n                    },\n                    [_vm._v(\"Cache Hits\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.misses\" }\n                    },\n                    [_vm._v(\"Cache Misses\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.gets\" }\n                    },\n                    [_vm._v(\"Cache Gets\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.puts\" }\n                    },\n                    [_vm._v(\"Cache Puts\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.removals\" }\n                    },\n                    [_vm._v(\"Cache Removals\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.evictions\" }\n                    },\n                    [_vm._v(\"Cache Evictions\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.hitPercent\" }\n                    },\n                    [_vm._v(\"Cache Hit %\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      attrs: { \"data-translate\": \"metrics.cache.missPercent\" }\n                    },\n                    [_vm._v(\"Cache Miss %\")]\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"tbody\",\n                _vm._l(_vm.metrics.cache, function(entry, key) {\n                  return _c(\"tr\", { key: key }, [\n                    _c(\"td\", [_vm._v(_vm._s(key))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(entry[\"cache.gets.hit\"]))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(entry[\"cache.gets.miss\"]))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        _vm._s(\n                          entry[\"cache.gets.hit\"] + entry[\"cache.gets.miss\"]\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(entry[\"cache.puts\"]))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(entry[\"cache.removals\"]))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(_vm._s(entry[\"cache.evictions\"]))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.filterNaN(\n                                (100 * entry[\"cache.gets.hit\"]) /\n                                  (entry[\"cache.gets.hit\"] +\n                                    entry[\"cache.gets.miss\"])\n                              )\n                            )\n                          ) +\n                          \"\\n        \"\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticClass: \"text-right\" }, [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(\n                            _vm.formatNumber2(\n                              _vm.filterNaN(\n                                (100 * entry[\"cache.gets.miss\"]) /\n                                  (entry[\"cache.gets.hit\"] +\n                                    entry[\"cache.gets.miss\"])\n                              )\n                            )\n                          ) +\n                          \"\\n        \"\n                      )\n                    ])\n                  ])\n                }),\n                0\n              )\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        {\n          domProps: { textContent: _vm._s(_vm.$t(\"metrics.datasource.title\")) }\n        },\n        [_vm._v(\"DataSource statistics (time in millisecond)\")]\n      ),\n      _vm._v(\" \"),\n      !_vm.updatingMetrics &&\n      _vm.isObjectExistingAndNotEmpty(_vm.metrics, \"databases\")\n        ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\"table\", { staticClass: \"table table-striped\" }, [\n              _c(\"thead\", [\n                _c(\"tr\", [\n                  _c(\"th\", [\n                    _c(\n                      \"span\",\n                      {\n                        domProps: {\n                          textContent: _vm._s(\n                            _vm.$t(\"metrics.datasource.usage\")\n                          )\n                        }\n                      },\n                      [_vm._v(\"Connection Pool Usage\")]\n                    ),\n                    _vm._v(\n                      \"\\n          (active: \" +\n                        _vm._s(_vm.metrics.databases.active.value) +\n                        \", min: \" +\n                        _vm._s(_vm.metrics.databases.min.value) +\n                        \", max:\\n          \" +\n                        _vm._s(_vm.metrics.databases.max.value) +\n                        \",\\n          idle: \" +\n                        _vm._s(_vm.metrics.databases.idle.value) +\n                        \")\\n        \"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(_vm.$t(\"metrics.datasource.count\"))\n                      }\n                    },\n                    [_vm._v(\"Count\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(_vm.$t(\"metrics.datasource.mean\"))\n                      }\n                    },\n                    [_vm._v(\"Mean\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.servicesstats.table.min\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Min\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.servicesstats.table.p50\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"p50\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.servicesstats.table.p75\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"p75\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.servicesstats.table.p95\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"p95\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"metrics.servicesstats.table.p99\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"p99\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"th\",\n                    {\n                      staticClass: \"text-right\",\n                      domProps: {\n                        textContent: _vm._s(_vm.$t(\"metrics.datasource.max\"))\n                      }\n                    },\n                    [_vm._v(\"Max\")]\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"tbody\", [\n                _c(\"tr\", [\n                  _c(\"td\", [_vm._v(\"Acquire\")]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(_vm._s(_vm.metrics.databases.acquire.count))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.filterNaN(_vm.metrics.databases.acquire.mean)\n                        )\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.acquire[\"0.0\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.acquire[\"0.5\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.acquire[\"0.75\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.acquire[\"0.95\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.acquire[\"0.99\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.filterNaN(_vm.metrics.databases.acquire.max)\n                        )\n                      )\n                    )\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"td\", [_vm._v(\"Creation\")]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(_vm._s(_vm.metrics.databases.creation.count))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.filterNaN(_vm.metrics.databases.creation.mean)\n                        )\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.creation[\"0.0\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.creation[\"0.5\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.metrics.databases.creation[\"0.75\"]\n                        )\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.metrics.databases.creation[\"0.95\"]\n                        )\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.metrics.databases.creation[\"0.99\"]\n                        )\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.filterNaN(_vm.metrics.databases.creation.max)\n                        )\n                      ) + \"\\n        \"\n                    )\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"td\", [_vm._v(\"Usage\")]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(_vm._s(_vm.metrics.databases.usage.count))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.filterNaN(_vm.metrics.databases.usage.mean)\n                        )\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.usage[\"0.0\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.usage[\"0.5\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.usage[\"0.75\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.usage[\"0.95\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(_vm.metrics.databases.usage[\"0.99\"])\n                      )\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"text-right\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.formatNumber2(\n                          _vm.filterNaN(_vm.metrics.databases.usage.max)\n                        )\n                      )\n                    )\n                  ])\n                ])\n              ])\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"b-modal\",\n        { ref: \"metricsModal\", attrs: { size: \"lg\" } },\n        [\n          _c(\n            \"h4\",\n            {\n              staticClass: \"modal-title\",\n              attrs: { slot: \"modal-title\", id: \"showMetricsLabel\" },\n              domProps: {\n                textContent: _vm._s(_vm.$t(\"metrics.jvm.threads.dump.title\"))\n              },\n              slot: \"modal-title\"\n            },\n            [_vm._v(\"Threads dump\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"metrics-modal\", { attrs: { \"thread-dump\": _vm.threadData } })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", [\n      _c(\"tr\", [\n        _c(\"th\", [_vm._v(\"Method\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"Endpoint url\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { staticClass: \"text-right\" }, [_vm._v(\"Count\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { staticClass: \"text-right\" }, [_vm._v(\"Mean\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"modal-body\" },\n    [\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-primary\",\n          on: {\n            click: function($event) {\n              _vm.threadDumpFilter = \"\"\n            }\n          }\n        },\n        [\n          _vm._v(\"All \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpAll))\n          ])\n        ]\n      ),\n      _vm._v(\" \\n    \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-success\",\n          on: {\n            click: function($event) {\n              _vm.threadDumpFilter = \"RUNNABLE\"\n            }\n          }\n        },\n        [\n          _vm._v(\"Runnable \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpRunnable))\n          ])\n        ]\n      ),\n      _vm._v(\" \\n    \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-info\",\n          on: {\n            click: function($event) {\n              _vm.threadDumpFilter = \"WAITING\"\n            }\n          }\n        },\n        [\n          _vm._v(\"Waiting \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpWaiting))\n          ])\n        ]\n      ),\n      _vm._v(\" \\n    \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-warning\",\n          on: {\n            click: function($event) {\n              _vm.threadDumpFilter = \"TIMED_WAITING\"\n            }\n          }\n        },\n        [\n          _vm._v(\"Timed Waiting \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpTimedWaiting))\n          ])\n        ]\n      ),\n      _vm._v(\" \\n    \"),\n      _c(\n        \"span\",\n        {\n          staticClass: \"badge badge-danger\",\n          on: {\n            click: function($event) {\n              _vm.threadDumpFilter = \"BLOCKED\"\n            }\n          }\n        },\n        [\n          _vm._v(\"Blocked \"),\n          _c(\"span\", { staticClass: \"badge badge-pill badge-default\" }, [\n            _vm._v(_vm._s(_vm.threadDumpData.threadDumpBlocked))\n          ])\n        ]\n      ),\n      _vm._v(\" \\n    \"),\n      _c(\"div\", { staticClass: \"mt-2\" }, [_vm._v(\" \")]),\n      _vm._v(\"\\n    Filter\\n    \"),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.threadDumpFilter,\n            expression: \"threadDumpFilter\"\n          }\n        ],\n        staticClass: \"form-control\",\n        attrs: { type: \"text\" },\n        domProps: { value: _vm.threadDumpFilter },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.threadDumpFilter = $event.target.value\n          }\n        }\n      }),\n      _vm._v(\" \"),\n      _vm._l(_vm.filterBy(_vm.threadDump, _vm.threadDumpFilter), function(\n        entry,\n        key\n      ) {\n        return _c(\"div\", { key: key, staticClass: \"pad\" }, [\n          _c(\"h6\", [\n            _c(\n              \"span\",\n              {\n                staticClass: \"badge\",\n                class: _vm.getBadgeClass(entry.threadState)\n              },\n              [_vm._v(_vm._s(entry.threadState))]\n            ),\n            _vm._v(\n              \" \" +\n                _vm._s(entry.threadName) +\n                \" (ID \" +\n                _vm._s(entry.threadId) +\n                \")\\n            \"\n            ),\n            _c(\n              \"a\",\n              {\n                attrs: { href: \"javascript:void(0);\" },\n                on: {\n                  click: function($event) {\n                    entry.show = !entry.show\n                  }\n                }\n              },\n              [\n                _c(\n                  \"span\",\n                  {\n                    attrs: { hidden: entry.show },\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.threads.dump.show\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Show StackTrace\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  {\n                    attrs: { hidden: !entry.show },\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.threads.dump.hide\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Hide StackTrace\")]\n                )\n              ]\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\", attrs: { hidden: !entry.show } }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              _vm._l(entry.stackTrace, function(st, key) {\n                return _c(\"div\", { key: key, staticClass: \"break\" }, [\n                  _c(\"samp\", [\n                    _vm._v(\n                      _vm._s(st.className) + \".\" + _vm._s(st.methodName) + \"(\"\n                    ),\n                    _c(\"code\", [\n                      _vm._v(_vm._s(st.fileName) + \":\" + _vm._s(st.lineNumber))\n                    ]),\n                    _vm._v(\")\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"mt-1\" })\n                ])\n              }),\n              0\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"table\", { staticClass: \"table table-sm table-responsive\" }, [\n            _c(\"thead\", [\n              _c(\"tr\", [\n                _c(\n                  \"th\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.threads.dump.blockedtime\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Blocked Time\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"th\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.threads.dump.blockedcount\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Blocked Count\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"th\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.threads.dump.waitedtime\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Waited Time\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"th\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.threads.dump.waitedcount\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Waited Count\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"th\",\n                  {\n                    domProps: {\n                      textContent: _vm._s(\n                        _vm.$t(\"metrics.jvm.threads.dump.lockname\")\n                      )\n                    }\n                  },\n                  [_vm._v(\"Lock Name\")]\n                )\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"tbody\", [\n              _c(\"tr\", [\n                _c(\"td\", [_vm._v(_vm._s(entry.blockedTime))]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(_vm._s(entry.blockedCount))]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(_vm._s(entry.waitedTime))]),\n                _vm._v(\" \"),\n                _c(\"td\", [_vm._v(_vm._s(entry.waitedCount))]),\n                _vm._v(\" \"),\n                _c(\n                  \"td\",\n                  {\n                    staticClass: \"thread-dump-modal-lock\",\n                    attrs: { title: entry.lockName }\n                  },\n                  [_c(\"code\", [_vm._v(_vm._s(entry.lockName))])]\n                )\n              ])\n            ])\n          ])\n        ])\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??ref--1-0!./metrics-modal.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??ref--1-0!./metrics-modal.component.ts?vue&type=script&lang=ts&\"","import { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class JhiMetricsModal extends Vue {\n  @Prop()\n  threadDump!: any;\n\n  public threadDumpFilter: any = null;\n\n  get threadDumpData(): any {\n    const data = {\n      threadDumpAll: 0,\n      threadDumpBlocked: 0,\n      threadDumpRunnable: 0,\n      threadDumpTimedWaiting: 0,\n      threadDumpWaiting: 0\n    };\n    if (this.threadDump) {\n      this.threadDump.forEach(value => {\n        if (value.threadState === 'RUNNABLE') {\n          data.threadDumpRunnable += 1;\n        } else if (value.threadState === 'WAITING') {\n          data.threadDumpWaiting += 1;\n        } else if (value.threadState === 'TIMED_WAITING') {\n          data.threadDumpTimedWaiting += 1;\n        } else if (value.threadState === 'BLOCKED') {\n          data.threadDumpBlocked += 1;\n        }\n      });\n      data.threadDumpAll = data.threadDumpRunnable + data.threadDumpWaiting + data.threadDumpTimedWaiting + data.threadDumpBlocked;\n    }\n    return data;\n  }\n\n  public getBadgeClass(threadState: string): string {\n    if (threadState === 'RUNNABLE') {\n      return 'badge-success';\n    } else if (threadState === 'WAITING') {\n      return 'badge-info';\n    } else if (threadState === 'TIMED_WAITING') {\n      return 'badge-warning';\n    } else if (threadState === 'BLOCKED') {\n      return 'badge-danger';\n    }\n  }\n}\n","import { render, staticRenderFns } from \"./metrics-modal.vue?vue&type=template&id=dc79ea98&\"\nimport script from \"./metrics-modal.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./metrics-modal.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/wwammaww/github/we-business-project/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('dc79ea98', component.options)\n    } else {\n      api.reload('dc79ea98', component.options)\n    }\n    module.hot.accept(\"./metrics-modal.vue?vue&type=template&id=dc79ea98&\", function () {\n      api.rerender('dc79ea98', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/admin/metrics/metrics-modal.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??ref--1-0!./metrics.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??ref--1-0!./metrics.component.ts?vue&type=script&lang=ts&\"","import numeral from 'numeral';\nimport JhiMetricsModal from './metrics-modal.vue';\nimport MetricsService from './metrics.service';\nimport { Component, Vue, Inject } from 'vue-property-decorator';\n\n@Component({\n  components: {\n    'metrics-modal': JhiMetricsModal\n  }\n})\nexport default class JhiMetrics extends Vue {\n  public metrics: any = {};\n  public threadData: any = null;\n  public threadStats: any = {};\n  public updatingMetrics = true;\n  @Inject('metricsService')\n  private metricsService: () => MetricsService;\n\n  public mounted(): void {\n    this.refresh();\n  }\n\n  public refresh(): void {\n    this.metricsService()\n      .getMetrics()\n      .then(resultsMetrics => {\n        this.metrics = resultsMetrics.data;\n        this.metricsService()\n          .retrieveThreadDump()\n          .then(res => {\n            this.updatingMetrics = true;\n            this.threadData = res.data.threads;\n\n            this.threadStats = {\n              threadDumpRunnable: 0,\n              threadDumpWaiting: 0,\n              threadDumpTimedWaiting: 0,\n              threadDumpBlocked: 0,\n              threadDumpAll: 0\n            };\n\n            this.threadData.forEach(value => {\n              if (value.threadState === 'RUNNABLE') {\n                this.threadStats.threadDumpRunnable += 1;\n              } else if (value.threadState === 'WAITING') {\n                this.threadStats.threadDumpWaiting += 1;\n              } else if (value.threadState === 'TIMED_WAITING') {\n                this.threadStats.threadDumpTimedWaiting += 1;\n              } else if (value.threadState === 'BLOCKED') {\n                this.threadStats.threadDumpBlocked += 1;\n              }\n            });\n\n            this.threadStats.threadDumpAll =\n              this.threadStats.threadDumpRunnable +\n              this.threadStats.threadDumpWaiting +\n              this.threadStats.threadDumpTimedWaiting +\n              this.threadStats.threadDumpBlocked;\n\n            this.updatingMetrics = false;\n          })\n          .catch(() => {\n            this.updatingMetrics = true;\n          });\n      })\n      .catch(() => {\n        this.updatingMetrics = true;\n      });\n  }\n\n  openModal(): void {\n    if ((<any>this.$refs.metricsModal).show) {\n      (<any>this.$refs.metricsModal).show();\n    }\n  }\n\n  filterNaN(input: any): any {\n    if (isNaN(input)) {\n      return 0;\n    }\n    return input;\n  }\n\n  formatNumber1(value: any): any {\n    return numeral(value).format('0,0');\n  }\n\n  formatNumber2(value: any): any {\n    return numeral(value).format('0,00');\n  }\n\n  convertMillisecondsToDuration(ms) {\n    const times = {\n      year: 31557600000,\n      month: 2629746000,\n      day: 86400000,\n      hour: 3600000,\n      minute: 60000,\n      second: 1000\n    };\n    let time_string = '';\n    let plural = '';\n    for (const key in times) {\n      if (Math.floor(ms / times[key]) > 0) {\n        if (Math.floor(ms / times[key]) > 1) {\n          plural = 's';\n        } else {\n          plural = '';\n        }\n        time_string += Math.floor(ms / times[key]).toString() + ' ' + key.toString() + plural + ' ';\n        ms = ms - times[key] * Math.floor(ms / times[key]);\n      }\n    }\n    return time_string;\n  }\n\n  public isObjectExisting(metrics: any, key: string): boolean {\n    return metrics && metrics[key];\n  }\n\n  public isObjectExistingAndNotEmpty(metrics: any, key: string): boolean {\n    return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\n  }\n}\n","import { render, staticRenderFns } from \"./metrics.vue?vue&type=template&id=55e5cdd8&\"\nimport script from \"./metrics.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./metrics.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/wwammaww/github/we-business-project/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('55e5cdd8', component.options)\n    } else {\n      api.reload('55e5cdd8', component.options)\n    }\n    module.hot.accept(\"./metrics.vue?vue&type=template&id=55e5cdd8&\", function () {\n      api.rerender('55e5cdd8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/admin/metrics/metrics.vue\"\nexport default component.exports"],"sourceRoot":""}