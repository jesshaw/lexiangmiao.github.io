{"version":3,"sources":["webpack:///./src/main/webapp/app/account/reset-password/init/reset-password-init.vue?f281","webpack:///./src/main/webapp/app/account/reset-password/init/reset-password-init.component.ts","webpack:///./src/main/webapp/app/account/reset-password/init/reset-password-init.component.ts?5051","webpack:///./src/main/webapp/app/account/reset-password/init/reset-password-init.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","domProps","textContent","_s","$t","_v","errorEmailNotExists","innerHTML","_e","success","attrs","name","role","on","submit","$event","preventDefault","requestReset","for","directives","rawName","value","$v","resetAccount","email","$model","expression","class","valid","$invalid","invalid","type","id","placeholder","minlength","maxlength","required","input","target","composing","$set","$anyDirty","minLength","maxLength","disabled","_withStripped","r","s","n","i","l","o","c","validations","validators","Object","init_reset_password_init_componentvue_type_script_lang_ts_","_super","ResetPasswordInit","_this","apply","arguments","error","e","tslib_es6","prototype","axios_default","a","post","headers","content-type","then","catch","response","status","data","constants","b","vue_property_decorator","d","component","componentNormalizer","options","__file","__webpack_exports__","default"],"mappings":"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","file":"app/8.c1f52d746479b3540c33.chunk.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8\" }, [\n        _c(\n          \"h1\",\n          { domProps: { textContent: _vm._s(_vm.$t(\"reset.request.title\")) } },\n          [_vm._v(\"Reset your password\")]\n        ),\n        _vm._v(\" \"),\n        _vm.errorEmailNotExists\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"reset.request.messages.notfound\"))\n                }\n              },\n              [\n                _c(\"strong\", [_vm._v(\"Email address isn't registered!\")]),\n                _vm._v(\" Please check and try again.\\n            \")\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.success\n          ? _c(\"div\", { staticClass: \"alert alert-warning\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.request.messages.info\"))\n                  }\n                },\n                [_vm._v(\"Enter the email address you used to register.\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\"div\", { staticClass: \"alert alert-success\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"reset.request.messages.success\")\n                    )\n                  }\n                },\n                [\n                  _vm._v(\n                    \"Check your emails for details on how to reset your password.\"\n                  )\n                ]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.success\n          ? _c(\n              \"form\",\n              {\n                attrs: { name: \"form\", role: \"form\" },\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.requestReset()\n                  }\n                }\n              },\n              [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"form-control-label\",\n                      attrs: { for: \"email\" },\n                      domProps: {\n                        textContent: _vm._s(_vm.$t(\"global.form.email\"))\n                      }\n                    },\n                    [_vm._v(\"Email\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.$v.resetAccount.email.$model,\n                        expression: \"$v.resetAccount.email.$model\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      valid: !_vm.$v.resetAccount.email.$invalid,\n                      invalid: _vm.$v.resetAccount.email.$invalid\n                    },\n                    attrs: {\n                      type: \"email\",\n                      id: \"email\",\n                      name: \"email\",\n                      placeholder: _vm.$t(\"global.form['email.placeholder']\"),\n                      minlength: \"5\",\n                      maxlength: \"254\",\n                      email: \"\",\n                      required: \"\"\n                    },\n                    domProps: { value: _vm.$v.resetAccount.email.$model },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.$v.resetAccount.email,\n                          \"$model\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.$v.resetAccount.email.$anyDirty &&\n                  _vm.$v.resetAccount.email.$invalid\n                    ? _c(\"div\", [\n                        !_vm.$v.resetAccount.email.required\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.required\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            Your email is required.\\n                        \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.resetAccount.email.email\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.invalid\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            Your email is invalid.\\n                        \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.resetAccount.email.minLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.minlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            Your email is required to be at least 5 characters.\\n                        \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.resetAccount.email.maxLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.maxlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            Your email cannot be longer than 100 characters.\\n                        \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-primary\",\n                    attrs: {\n                      type: \"submit\",\n                      disabled: _vm.$v.resetAccount.$invalid\n                    },\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"reset.request.form.button\"))\n                    }\n                  },\n                  [_vm._v(\"Reset\")]\n                )\n              ]\n            )\n          : _vm._e()\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { email, maxLength, minLength, required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport { EMAIL_NOT_FOUND_TYPE } from '@/constants';\nimport { Vue, Component } from 'vue-property-decorator';\n\nconst validations = {\n  resetAccount: {\n    email: {\n      required,\n      minLength: minLength(5),\n      maxLength: maxLength(254),\n      email\n    }\n  }\n};\n\ninterface ResetAccount {\n  email: string;\n}\n\n@Component({\n  validations\n})\nexport default class ResetPasswordInit extends Vue {\n  public success: boolean = null;\n  public error: string = null;\n  public errorEmailNotExists: string = null;\n  public resetAccount: ResetAccount = {\n    email: null\n  };\n\n  public requestReset(): void {\n    this.errorEmailNotExists = null;\n    this.error = null;\n    axios\n      .post('api/account/reset-password/init', this.resetAccount.email, {\n        headers: {\n          'content-type': 'text/plain'\n        }\n      })\n      .then(() => {\n        this.success = true;\n      })\n      .catch(error => {\n        this.success = null;\n        if (error.response.status === 400 && error.response.data.type === EMAIL_NOT_FOUND_TYPE) {\n          this.errorEmailNotExists = 'ERROR';\n        } else {\n          this.error = 'ERROR';\n        }\n      });\n  }\n}\n","import mod from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--1-0!./reset-password-init.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../node_modules/ts-loader/index.js??ref--1-0!./reset-password-init.component.ts?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./reset-password-init.vue?vue&type=template&id=d9107294&\"\nimport script from \"./reset-password-init.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./reset-password-init.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/wwammaww/github/we-business-project/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('d9107294', component.options)\n    } else {\n      api.reload('d9107294', component.options)\n    }\n    module.hot.accept(\"./reset-password-init.vue?vue&type=template&id=d9107294&\", function () {\n      api.rerender('d9107294', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/reset-password/init/reset-password-init.vue\"\nexport default component.exports"],"sourceRoot":""}